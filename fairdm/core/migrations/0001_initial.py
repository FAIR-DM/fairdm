# Generated by Django 5.1.3 on 2025-02-06 15:23

import django.db.models.deletion
import easy_thumbnails.fields
import fairdm.core.choices
import fairdm.db.fields
import fairdm.utils.utils
import licensing.fields
import meta.models
import polymorphic.showfields
import research_vocabs.fields
import shortuuid.django_fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("contributors", "0001_initial"),
        ("generic", "0001_initial"),
        ("licensing", "0001_initial"),
        ("literature", "0004_alter_literatureitem_options"),
        ("research_vocabs", "0001_initial"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        null=True,
                        upload_to=fairdm.utils.utils.default_image_path,
                        verbose_name="image",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "options",
                    models.JSONField(blank=True, null=True, verbose_name="options"),
                ),
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=23,
                        prefix="d",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "visibility",
                    models.IntegerField(
                        choices=[(0, "Private"), (1, "Public")],
                        default=0,
                        help_text="Visibility within the application.",
                        verbose_name="visibility",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Controlled keywords for enhanced discoverability",
                        to="research_vocabs.concept",
                        verbose_name="keywords",
                    ),
                ),
                (
                    "license",
                    licensing.fields.LicenseField(
                        blank=True,
                        help_text="the license under which this content is published",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="licensing.license",
                        verbose_name="license",
                    ),
                ),
                (
                    "reference",
                    models.OneToOneField(
                        blank=True,
                        help_text="The data publication associated with this dataset.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="literature.literatureitem",
                    ),
                ),
                (
                    "related_literature",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Any literature that is related to this dataset.",
                        related_name="related_datasets",
                        related_query_name="related_dataset",
                        to="literature.literatureitem",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="generic.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "dataset",
                "verbose_name_plural": "datasets",
                "ordering": ["modified"],
                "default_related_name": "datasets",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="DatasetDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Start", "Start Date"),
                            ("End", "End Date"),
                            ("Submitted", "Submission Date"),
                            ("Published", "Publication Date"),
                            ("Withdrawn", "Withdrawal Date"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", fairdm.db.fields.PartialDateField(verbose_name="date")),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "date",
                "verbose_name_plural": "dates",
                "ordering": ["value"],
                "abstract": False,
                "default_related_name": "dates",
            },
        ),
        migrations.CreateModel(
            name="DatasetDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Abstract", "Abstract"),
                            ("Methods", "Methods"),
                            ("SeriesInformation", "Series Information"),
                            ("TechnicalInfo", "Technical Information"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.TextField()),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "description",
                "verbose_name_plural": "descriptions",
                "abstract": False,
                "default_related_name": "descriptions",
            },
        ),
        migrations.CreateModel(
            name="DatasetIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CROSSREF_FUNDER_ID", "Crossref Funder ID"),
                            ("ISNI", "ISNI"),
                            ("ORCID", "ORCID iD"),
                            ("ROR", "ROR"),
                            ("RESEARCHER_ID", "ResearcherID"),
                            ("WIKIDATA", "Wikidata"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        verbose_name="identifier",
                    ),
                ),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        null=True,
                        upload_to=fairdm.utils.utils.default_image_path,
                        verbose_name="image",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "options",
                    models.JSONField(blank=True, null=True, verbose_name="options"),
                ),
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=23,
                        prefix="m",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        help_text="The original dataset this measurement first appeared in.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="fairdm_core.dataset",
                        verbose_name="dataset",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Controlled keywords for enhanced discoverability",
                        to="research_vocabs.concept",
                        verbose_name="keywords",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="generic.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "measurement",
                "verbose_name_plural": "measurements",
                "ordering": ["-modified"],
                "default_related_name": "measurements",
            },
            bases=(
                meta.models.ModelMeta,
                polymorphic.showfields.ShowFieldType,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="MeasurementDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Created", "Creation date"),
                            ("Destroyed", "Destruction date"),
                            ("Collected", "Collection date"),
                            ("Returned", "Return date"),
                            ("Prepared", "Preparation date"),
                            ("Archival", "Storage date"),
                            ("Restored", "Restoration date"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", fairdm.db.fields.PartialDateField(verbose_name="date")),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.measurement",
                    ),
                ),
            ],
            options={
                "verbose_name": "date",
                "verbose_name_plural": "dates",
                "ordering": ["value"],
                "abstract": False,
                "default_related_name": "dates",
            },
        ),
        migrations.CreateModel(
            name="MeasurementDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SampleCollection", "Collection"),
                            ("SamplePreparation", "Preparation"),
                            ("SampleStorage", "Storage"),
                            ("SampleDestruction", "Destruction"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.TextField()),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.measurement",
                    ),
                ),
            ],
            options={
                "verbose_name": "description",
                "verbose_name_plural": "descriptions",
                "abstract": False,
                "default_related_name": "descriptions",
            },
        ),
        migrations.CreateModel(
            name="MeasurementIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CROSSREF_FUNDER_ID", "Crossref Funder ID"),
                            ("ISNI", "ISNI"),
                            ("ORCID", "ORCID iD"),
                            ("ROR", "ROR"),
                            ("RESEARCHER_ID", "ResearcherID"),
                            ("WIKIDATA", "Wikidata"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        verbose_name="identifier",
                    ),
                ),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.measurement",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        null=True,
                        upload_to=fairdm.utils.utils.default_image_path,
                        verbose_name="image",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "options",
                    models.JSONField(blank=True, null=True, verbose_name="options"),
                ),
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=23,
                        prefix="p",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "visibility",
                    models.IntegerField(
                        choices=[(0, "Private"), (1, "Public")],
                        default=0,
                        help_text="Visibility within the application.",
                        verbose_name="visibility",
                    ),
                ),
                (
                    "funding",
                    models.JSONField(
                        blank=True,
                        help_text="Related funding information.",
                        null=True,
                        verbose_name="funding",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "Concept"),
                            (1, "Planning"),
                            (2, "In progress"),
                            (3, "Complete"),
                            (4, "Unknown"),
                        ],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Controlled keywords for enhanced discoverability",
                        to="research_vocabs.concept",
                        verbose_name="keywords",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The organization that owns the project.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owned_projects",
                        to="contributors.organization",
                        verbose_name="owner",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="generic.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "project",
                "verbose_name_plural": "projects",
                "ordering": ["-modified"],
                "default_related_name": "projects",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.AddField(
            model_name="dataset",
            name="project",
            field=models.ForeignKey(
                blank=True,
                help_text="The project associated with the dataset.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="datasets",
                to="fairdm_core.project",
                verbose_name="project",
            ),
        ),
        migrations.CreateModel(
            name="ProjectDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("Start", "Start Date"), ("End", "End Date")],
                        max_length=50,
                    ),
                ),
                ("value", fairdm.db.fields.PartialDateField(verbose_name="date")),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "date",
                "verbose_name_plural": "dates",
                "ordering": ["value"],
                "abstract": False,
                "default_related_name": "dates",
            },
        ),
        migrations.CreateModel(
            name="ProjectDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Abstract", "Abstract"),
                            ("Introduction", "Introduction"),
                            ("Background", "Background"),
                            ("Objectives", "Objectives"),
                            ("ExpectedOutput", "Expected Output"),
                            ("Methods", "Methods"),
                            ("Conclusions", "Conclusions"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.TextField()),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "description",
                "verbose_name_plural": "descriptions",
                "abstract": False,
                "default_related_name": "descriptions",
            },
        ),
        migrations.CreateModel(
            name="ProjectIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CROSSREF_FUNDER_ID", "Crossref Funder ID"),
                            ("ISNI", "ISNI"),
                            ("ORCID", "ORCID iD"),
                            ("ROR", "ROR"),
                            ("RESEARCHER_ID", "ResearcherID"),
                            ("WIKIDATA", "Wikidata"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        verbose_name="identifier",
                    ),
                ),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
            },
        ),
        migrations.CreateModel(
            name="Sample",
            fields=[
                (
                    "image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        null=True,
                        upload_to=fairdm.utils.utils.default_image_path,
                        verbose_name="image",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "options",
                    models.JSONField(blank=True, null=True, verbose_name="options"),
                ),
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=23,
                        prefix="s",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "local_id",
                    models.CharField(
                        blank=True,
                        help_text="An alphanumeric identifier used by the creator/s to identify the sample within a specific dataset",
                        max_length=255,
                        null=True,
                        verbose_name="Local ID",
                    ),
                ),
                (
                    "status",
                    research_vocabs.fields.ConceptField(
                        default="unknown",
                        max_length=8,
                        verbose_name="status",
                        vocabulary=fairdm.core.choices.SampleStatus,
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        help_text="The original dataset this sample first appeared in.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="samples",
                        to="fairdm_core.dataset",
                        verbose_name="dataset",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Controlled keywords for enhanced discoverability",
                        to="research_vocabs.concept",
                        verbose_name="keywords",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="generic.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "sample",
                "verbose_name_plural": "samples",
                "ordering": ["created"],
                "default_related_name": "samples",
            },
            bases=(
                meta.models.ModelMeta,
                polymorphic.showfields.ShowFieldType,
                models.Model,
            ),
        ),
        migrations.AddField(
            model_name="measurement",
            name="sample",
            field=models.ForeignKey(
                help_text="The sample on which the measurement was made.",
                on_delete=django.db.models.deletion.PROTECT,
                to="fairdm_core.sample",
                verbose_name="sample",
            ),
        ),
        migrations.CreateModel(
            name="SampleDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Created", "Creation date"),
                            ("Destroyed", "Destruction date"),
                            ("Collected", "Collection date"),
                            ("Returned", "Return date"),
                            ("Prepared", "Preparation date"),
                            ("Archival", "Storage date"),
                            ("Restored", "Restoration date"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", fairdm.db.fields.PartialDateField(verbose_name="date")),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.sample",
                    ),
                ),
            ],
            options={
                "verbose_name": "date",
                "verbose_name_plural": "dates",
                "ordering": ["value"],
                "abstract": False,
                "default_related_name": "dates",
            },
        ),
        migrations.CreateModel(
            name="SampleDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SampleCollection", "Collection"),
                            ("SamplePreparation", "Preparation"),
                            ("SampleStorage", "Storage"),
                            ("SampleDestruction", "Destruction"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.TextField()),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.sample",
                    ),
                ),
            ],
            options={
                "verbose_name": "description",
                "verbose_name_plural": "descriptions",
                "abstract": False,
                "default_related_name": "descriptions",
            },
        ),
        migrations.CreateModel(
            name="SampleIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CROSSREF_FUNDER_ID", "Crossref Funder ID"),
                            ("ISNI", "ISNI"),
                            ("ORCID", "ORCID iD"),
                            ("ROR", "ROR"),
                            ("RESEARCHER_ID", "ResearcherID"),
                            ("WIKIDATA", "Wikidata"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        verbose_name="identifier",
                    ),
                ),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fairdm_core.sample",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
            },
        ),
    ]
