# Generated by Django 5.1.6 on 2025-06-20 13:01

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
import django_bleach.models
import django_lifecycle.mixins
import easy_thumbnails.fields
import fairdm.db.fields
import fairdm.utils.utils
import shortuuid.django_fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contributors", "0001_initial"),
        ("generic", "0001_initial"),
        ("research_vocabs", "0002_alter_concept_unique_together"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "added",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this record was added to the database.",
                        verbose_name="Date added",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this record was last modified.",
                        verbose_name="Last modified",
                    ),
                ),
                (
                    "image",
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        null=True,
                        upload_to=fairdm.utils.utils.default_image_path,
                        verbose_name="image",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "options",
                    models.JSONField(blank=True, null=True, verbose_name="options"),
                ),
                (
                    "uuid",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=23,
                        prefix="p",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "visibility",
                    models.IntegerField(
                        choices=[(0, "Private"), (1, "Public")],
                        default=0,
                        help_text="Visibility within the application.",
                        verbose_name="visibility",
                    ),
                ),
                (
                    "funding",
                    models.JSONField(
                        blank=True,
                        help_text="Related funding information.",
                        null=True,
                        verbose_name="funding",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "Concept"),
                            (1, "Planning"),
                            (2, "In progress"),
                            (3, "Complete"),
                            (4, "Unknown"),
                        ],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Controlled keywords for enhanced discoverability",
                        to="research_vocabs.concept",
                        verbose_name="keywords",
                    ),
                ),
                (
                    "owner",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        help_text="The organization that owns the project.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owned_projects",
                        to="contributors.organization",
                        verbose_name="owner",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="generic.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "project",
                "verbose_name_plural": "projects",
                "ordering": ["-modified"],
                "default_related_name": "projects",
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProjectDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("Start", "Start Date"), ("End", "End Date")],
                        max_length=50,
                    ),
                ),
                ("value", fairdm.db.fields.PartialDateField(verbose_name="date")),
                (
                    "related",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "date",
                "verbose_name_plural": "dates",
                "ordering": ["value"],
                "abstract": False,
                "default_related_name": "dates",
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProjectDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Abstract", "Abstract"),
                            ("Introduction", "Introduction"),
                            ("Background", "Background"),
                            ("Objectives", "Objectives"),
                            ("ExpectedOutput", "Expected Output"),
                            ("Methods", "Methods"),
                            ("Conclusions", "Conclusions"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", django_bleach.models.BleachField()),
                (
                    "related",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "description",
                "verbose_name_plural": "descriptions",
                "abstract": False,
                "default_related_name": "descriptions",
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProjectIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CROSSREF_FUNDER_ID", "Crossref Funder ID"),
                            ("ISNI", "ISNI"),
                            ("ORCID", "ORCID iD"),
                            ("ROR", "ROR"),
                            ("RESEARCHER_ID", "ResearcherID"),
                            ("WIKIDATA", "Wikidata"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        verbose_name="identifier",
                    ),
                ),
                (
                    "related",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
